@startuml
!ifndef filters_pu
!define filters_pu


!include styles.pu
!include filter.pu



package Debuggy {
	namespace Gauger {
		namespace Filter {
			class AndFilters {
				- $_filters : \Debuggy\Gauger\Filter[]
				+ __construct (\Debuggy\Gauger\Filter[] $filters)
			}

			AndFilters --|> .Gauger._Filter


			class OrFilters {
				- $_filters : \Debuggy\Gauger\Filter[]
				+ __construct (\Debuggy\Gauger\Filter[] $filters)
			}

			OrFilters --|> .Gauger._Filter


			class Closure {
				- $_single : \Closure
				- $_bunch : \Closure
				+ __construct (\Closure $single = null, \Closure $bunch = null)
			}

			Closure --|> .Gauger._Filter


			class Distinct {
				- $_strict : bool
				+ __construct (bool $strict = true)
			}

			Distinct --|> .Gauger._Filter


			class Head {
				- $_counter : int
				- $_limit : int
				+ __construct (int $limit = 1)
			}

			Head --|> .Gauger._Filter


			class Tail {
				- $_counter : int
				- $_offset : int
				+ __construct (int $offset = 1)
			}

			Tail --|> .Gauger._Filter


			class Last {
				- $_limit : int
				+ __construct (int $limit = 1)
			}

			Last --|> .Gauger._Filter


			class Max {
				- $_limit : int
				+ __construct (int $limit = 1)
			}

			Max --|> .Gauger._Filter


			class Min {
				- $_limit : int
				+ __construct (int $limit = 1)
			}

			Min --|> .Gauger._Filter


			class Between {
				- $_min : mixed
				- $_max : mixed
				- $_inversion : bool
				- $_bcMath : bool
				- $_bcMathScale : int
				+ __construct (mixed $min = null, mixed $max = null, bool $inversion = false, bool|null $bcMath = false)
			}

			Between --|> .Gauger._Filter


			class Equal {
				- $_value : mixed
				- $_strict : bool
				+ __construct (mixed $value, bool $strict = true)
			}

			Equal --|> .Gauger._Filter


			class NotEqual {
				- $_value : mixed
				- $_strict : bool
				+ __construct (mixed $value, bool $strict = true)
			}

			NotEqual --|> .Gauger._Filter


			class Greater

			Greater --|> Between


			class GreaterOrEqual

			GreaterOrEqual --|> Between


			class Lesser

			Lesser --|> Between


			class LesserOrEqual

			LesserOrEqual --|> Between
		}
	}
}

!endif
@enduml